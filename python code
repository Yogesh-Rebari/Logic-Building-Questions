#solution of Algebraic and Transdental equation by Regular Falsi Method

from sympy import*
x=Symbol('x')
g=input('Enter the function:')
f=lambdify(x,g)
a=float(input('Enter the value:'))
b=float(input('Enter the value;'))
N=int(input('Enter number of iterations:'))
for i in range(1,N+1):
  c=(a*f(b)-b*f(a))/(f(b)-f(a))
  if ((f(a)*f(c)<0)):
    b=c
  else:
    a=c
  print('iteration %d\t the root %0.3f\t functional value %0.3f\n'%(i,c,f(c)));
print('Final value of root is %0.3f'%c)


#Solution of Algebraic and Transdental equation by Newton Rapson Method
from sympy import*
x=Symbol('x')
g=input('Enter the function')
f=lambdify(x,g)
dg=diff(g);
df=lambdify(x,dg)
x0=float(input('Enter initial approxiation;'))
N=int(input('Enter number of iterations:'))
for i in range(1,N+1):
  x1=(x0-(f(x0)/df(x0)))
  print('iteration %d\t the root %0.4f\t function value %0.4f\n'%(i,x1,f(x1)))
  x0=x1
print('final root of the equation is %0.3f'%x1)


#Computation of area under the curve by trapezoidal rule.

def f(x):
  return 1/(1+x**2)
def trapezoidal (f,a,b,n):
  h=(b-a)/n
  integration=f(a)+f(b)
  for i in range(1,n):
    k=a+i*h
    integration=integration+2*f(k)
  integration=integration*h/2
  return integration
lower_limit=float(input("Enter lower limit:"))
upper_limit=float(input("Enter upper limit:"))
sub_interval=int(input("Enter number of sub interval:"))
result=trapezoidal(f,lower_limit,upper_limit,sub_interval)
print("Interval trapezoidal rule is:%0.4f"%result)


#Computation of area under the curve by Simpson's 1/3rd rule.

def f(x):
  return (1)/(4*x+5)
def Simpson13(f,a,b,n):
  h=(b-a)/n
  integration=f(a)+f(b)
  k=a
  for i in range(1,n):
    if i%2==0:
      integration=integration+2*f(k)
    else:
      integration=integration+4*f(k)
    k+=h
  integration=integration*h*(1/3)
  return integration
lower_limit=float(input("Enter lower limit:"))
upper_limit=float(input("Enter upper limit:"))
sub_interval=int(input("Enter number of sub interval:"))
result=Simpson13(f,lower_limit,upper_limit,sub_interval)
print("Interval Simpson 1/3rd rule is:%0.4f"%result)


#Computation of area under the curve by Simpson's 3/8th rule.

from sympy import*
def simpsons_3_8_rule(f, a, b, n):
  h=(b-a)/n
  s=f(a)+f(b)
  for i in range(1, n, 3):
    s+=3*f(a+i*h)
  for i in range(3, n-1, 3):
    s+=2*f(a+i*h)
  for i in range(2, n-2, 3):
    s+=3*f(a+i*h)
  return s*3*h/8
def f(x):
  return sqrt(x**2+1)
lower_limit=float(input("Enter lower limit:"))
upper_limit=float(input("Enter upper limit:"))
sub_interval=int(input("Enter number of sub interval:"))
result=simpsons_3_8_rule(f, lower_limit, upper_limit, sub_interval)
print("Integration result by simpson 3/8th rule is:%0.4f"%result)

#git Yogesh-Rebari
#EmailMessage:yogeshrabari@gmail.com
